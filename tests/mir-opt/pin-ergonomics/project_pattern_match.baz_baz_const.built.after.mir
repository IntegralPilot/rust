// MIR for `baz_baz_const` after built

fn baz_baz_const(_1: Pin<&Baz<Baz<T, U>, Baz<T, U>>>) -> () {
    debug baz => _1;
    let mut _0: ();
    let mut _2: isize;
    let mut _3: isize;
    let mut _4: isize;
    let mut _5: isize;
    let mut _6: isize;
    let mut _7: isize;
    let mut _8: isize;
    let _9: std::pin::Pin<&T>;
    let _10: std::pin::Pin<&U>;
    let _11: std::pin::Pin<&T>;
    let _12: std::pin::Pin<&U>;
    let mut _13: &T;
    let mut _14: &U;
    let mut _15: &T;
    let mut _16: &U;
    let _17: std::pin::Pin<&T>;
    let _18: std::pin::Pin<&U>;
    let _19: std::pin::Pin<&T>;
    let _20: std::pin::Pin<&U>;
    let mut _21: &T;
    let mut _22: &U;
    let mut _23: &T;
    let mut _24: &U;
    let _25: std::pin::Pin<&T>;
    let _26: std::pin::Pin<&U>;
    let _27: std::pin::Pin<&T>;
    let _28: std::pin::Pin<&U>;
    let mut _29: &T;
    let mut _30: &U;
    let mut _31: &T;
    let mut _32: &U;
    let _33: std::pin::Pin<&T>;
    let _34: std::pin::Pin<&U>;
    let _35: std::pin::Pin<&T>;
    let _36: std::pin::Pin<&U>;
    let mut _37: &T;
    let mut _38: &U;
    let mut _39: &T;
    let mut _40: &U;
    let _41: std::pin::Pin<&T>;
    let _42: std::pin::Pin<&U>;
    let _43: std::pin::Pin<&T>;
    let _44: std::pin::Pin<&U>;
    let mut _45: &T;
    let mut _46: &U;
    let mut _47: &T;
    let mut _48: &U;
    let _49: std::pin::Pin<&T>;
    let _50: std::pin::Pin<&U>;
    let _51: std::pin::Pin<&T>;
    let _52: std::pin::Pin<&U>;
    let mut _53: &T;
    let mut _54: &U;
    let mut _55: &T;
    let mut _56: &U;
    let _57: std::pin::Pin<&T>;
    let _58: std::pin::Pin<&U>;
    let _59: std::pin::Pin<&T>;
    let _60: std::pin::Pin<&U>;
    let mut _61: &T;
    let mut _62: &U;
    let mut _63: &T;
    let mut _64: &U;
    let _65: std::pin::Pin<&T>;
    let _66: std::pin::Pin<&U>;
    let _67: std::pin::Pin<&T>;
    let _68: std::pin::Pin<&U>;
    let mut _69: &T;
    let mut _70: &U;
    let mut _71: &T;
    let mut _72: &U;
    scope 1 {
        debug x => _9;
        debug y => _10;
        debug z => _11;
        debug w => _12;
    }
    scope 2 {
        debug x => _17;
        debug y => _18;
        debug z => _19;
        debug w => _20;
    }
    scope 3 {
        debug x => _25;
        debug y => _26;
        debug z => _27;
        debug w => _28;
    }
    scope 4 {
        debug x => _33;
        debug y => _34;
        debug z => _35;
        debug w => _36;
    }
    scope 5 {
        debug x => _41;
        debug y => _42;
        debug z => _43;
        debug w => _44;
    }
    scope 6 {
        debug x => _49;
        debug y => _50;
        debug z => _51;
        debug w => _52;
    }
    scope 7 {
        debug x => _57;
        debug y => _58;
        debug z => _59;
        debug w => _60;
    }
    scope 8 {
        debug x => _65;
        debug y => _66;
        debug z => _67;
        debug w => _68;
    }

    bb0: {
        PlaceMention(_1);
        _8 = discriminant((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)));
        switchInt(move _8) -> [0: bb2, 1: bb16, otherwise: bb1];
    }

    bb1: {
        FakeRead(ForMatchedPlace(None), _1);
        unreachable;
    }

    bb2: {
        _4 = discriminant((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).0: Baz<T, U>));
        switchInt(move _4) -> [0: bb4, 1: bb10, otherwise: bb3];
    }

    bb3: {
        goto -> bb1;
    }

    bb4: {
        _2 = discriminant((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).1: Baz<T, U>));
        switchInt(move _2) -> [0: bb6, 1: bb8, otherwise: bb5];
    }

    bb5: {
        goto -> bb3;
    }

    bb6: {
        falseEdge -> [real: bb36, imaginary: bb8];
    }

    bb7: {
        goto -> bb5;
    }

    bb8: {
        falseEdge -> [real: bb35, imaginary: bb10];
    }

    bb9: {
        goto -> bb5;
    }

    bb10: {
        _3 = discriminant((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).1: Baz<T, U>));
        switchInt(move _3) -> [0: bb12, 1: bb14, otherwise: bb11];
    }

    bb11: {
        goto -> bb3;
    }

    bb12: {
        falseEdge -> [real: bb34, imaginary: bb14];
    }

    bb13: {
        goto -> bb11;
    }

    bb14: {
        falseEdge -> [real: bb33, imaginary: bb16];
    }

    bb15: {
        goto -> bb11;
    }

    bb16: {
        _7 = discriminant((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).0: Baz<T, U>));
        switchInt(move _7) -> [0: bb18, 1: bb24, otherwise: bb17];
    }

    bb17: {
        goto -> bb1;
    }

    bb18: {
        _5 = discriminant((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).1: Baz<T, U>));
        switchInt(move _5) -> [0: bb20, 1: bb22, otherwise: bb19];
    }

    bb19: {
        goto -> bb17;
    }

    bb20: {
        falseEdge -> [real: bb32, imaginary: bb22];
    }

    bb21: {
        goto -> bb19;
    }

    bb22: {
        falseEdge -> [real: bb31, imaginary: bb24];
    }

    bb23: {
        goto -> bb19;
    }

    bb24: {
        _6 = discriminant((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).1: Baz<T, U>));
        switchInt(move _6) -> [0: bb26, 1: bb28, otherwise: bb25];
    }

    bb25: {
        goto -> bb17;
    }

    bb26: {
        falseEdge -> [real: bb30, imaginary: bb28];
    }

    bb27: {
        goto -> bb25;
    }

    bb28: {
        StorageLive(_65);
        _69 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).0: Baz<T, U>) as Bar).0: T);
        _65 = Pin::<&T> { pointer: move _69 };
        StorageLive(_66);
        _70 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).0: Baz<T, U>) as Bar).1: U);
        _66 = Pin::<&U> { pointer: move _70 };
        StorageLive(_67);
        _71 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).1: Baz<T, U>) as Bar).0: T);
        _67 = Pin::<&T> { pointer: move _71 };
        StorageLive(_68);
        _72 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).1: Baz<T, U>) as Bar).1: U);
        _68 = Pin::<&U> { pointer: move _72 };
        _0 = const ();
        StorageDead(_68);
        StorageDead(_67);
        StorageDead(_66);
        StorageDead(_65);
        goto -> bb37;
    }

    bb29: {
        goto -> bb25;
    }

    bb30: {
        StorageLive(_57);
        _61 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).0: Baz<T, U>) as Bar).0: T);
        _57 = Pin::<&T> { pointer: move _61 };
        StorageLive(_58);
        _62 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).0: Baz<T, U>) as Bar).1: U);
        _58 = Pin::<&U> { pointer: move _62 };
        StorageLive(_59);
        _63 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).1: Baz<T, U>) as Foo).0: T);
        _59 = Pin::<&T> { pointer: move _63 };
        StorageLive(_60);
        _64 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).1: Baz<T, U>) as Foo).1: U);
        _60 = Pin::<&U> { pointer: move _64 };
        _0 = const ();
        StorageDead(_60);
        StorageDead(_59);
        StorageDead(_58);
        StorageDead(_57);
        goto -> bb37;
    }

    bb31: {
        StorageLive(_49);
        _53 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).0: Baz<T, U>) as Foo).0: T);
        _49 = Pin::<&T> { pointer: move _53 };
        StorageLive(_50);
        _54 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).0: Baz<T, U>) as Foo).1: U);
        _50 = Pin::<&U> { pointer: move _54 };
        StorageLive(_51);
        _55 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).1: Baz<T, U>) as Bar).0: T);
        _51 = Pin::<&T> { pointer: move _55 };
        StorageLive(_52);
        _56 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).1: Baz<T, U>) as Bar).1: U);
        _52 = Pin::<&U> { pointer: move _56 };
        _0 = const ();
        StorageDead(_52);
        StorageDead(_51);
        StorageDead(_50);
        StorageDead(_49);
        goto -> bb37;
    }

    bb32: {
        StorageLive(_41);
        _45 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).0: Baz<T, U>) as Foo).0: T);
        _41 = Pin::<&T> { pointer: move _45 };
        StorageLive(_42);
        _46 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).0: Baz<T, U>) as Foo).1: U);
        _42 = Pin::<&U> { pointer: move _46 };
        StorageLive(_43);
        _47 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).1: Baz<T, U>) as Foo).0: T);
        _43 = Pin::<&T> { pointer: move _47 };
        StorageLive(_44);
        _48 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Bar).1: Baz<T, U>) as Foo).1: U);
        _44 = Pin::<&U> { pointer: move _48 };
        _0 = const ();
        StorageDead(_44);
        StorageDead(_43);
        StorageDead(_42);
        StorageDead(_41);
        goto -> bb37;
    }

    bb33: {
        StorageLive(_33);
        _37 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).0: Baz<T, U>) as Bar).0: T);
        _33 = Pin::<&T> { pointer: move _37 };
        StorageLive(_34);
        _38 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).0: Baz<T, U>) as Bar).1: U);
        _34 = Pin::<&U> { pointer: move _38 };
        StorageLive(_35);
        _39 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).1: Baz<T, U>) as Bar).0: T);
        _35 = Pin::<&T> { pointer: move _39 };
        StorageLive(_36);
        _40 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).1: Baz<T, U>) as Bar).1: U);
        _36 = Pin::<&U> { pointer: move _40 };
        _0 = const ();
        StorageDead(_36);
        StorageDead(_35);
        StorageDead(_34);
        StorageDead(_33);
        goto -> bb37;
    }

    bb34: {
        StorageLive(_25);
        _29 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).0: Baz<T, U>) as Bar).0: T);
        _25 = Pin::<&T> { pointer: move _29 };
        StorageLive(_26);
        _30 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).0: Baz<T, U>) as Bar).1: U);
        _26 = Pin::<&U> { pointer: move _30 };
        StorageLive(_27);
        _31 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).1: Baz<T, U>) as Foo).0: T);
        _27 = Pin::<&T> { pointer: move _31 };
        StorageLive(_28);
        _32 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).1: Baz<T, U>) as Foo).1: U);
        _28 = Pin::<&U> { pointer: move _32 };
        _0 = const ();
        StorageDead(_28);
        StorageDead(_27);
        StorageDead(_26);
        StorageDead(_25);
        goto -> bb37;
    }

    bb35: {
        StorageLive(_17);
        _21 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).0: Baz<T, U>) as Foo).0: T);
        _17 = Pin::<&T> { pointer: move _21 };
        StorageLive(_18);
        _22 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).0: Baz<T, U>) as Foo).1: U);
        _18 = Pin::<&U> { pointer: move _22 };
        StorageLive(_19);
        _23 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).1: Baz<T, U>) as Bar).0: T);
        _19 = Pin::<&T> { pointer: move _23 };
        StorageLive(_20);
        _24 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).1: Baz<T, U>) as Bar).1: U);
        _20 = Pin::<&U> { pointer: move _24 };
        _0 = const ();
        StorageDead(_20);
        StorageDead(_19);
        StorageDead(_18);
        StorageDead(_17);
        goto -> bb37;
    }

    bb36: {
        StorageLive(_9);
        _13 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).0: Baz<T, U>) as Foo).0: T);
        _9 = Pin::<&T> { pointer: move _13 };
        StorageLive(_10);
        _14 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).0: Baz<T, U>) as Foo).1: U);
        _10 = Pin::<&U> { pointer: move _14 };
        StorageLive(_11);
        _15 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).1: Baz<T, U>) as Foo).0: T);
        _11 = Pin::<&T> { pointer: move _15 };
        StorageLive(_12);
        _16 = &(((((*(_1.0: &Baz<Baz<T, U>, Baz<T, U>>)) as Foo).1: Baz<T, U>) as Foo).1: U);
        _12 = Pin::<&U> { pointer: move _16 };
        _0 = const ();
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        goto -> bb37;
    }

    bb37: {
        return;
    }
}

error[E0277]: the trait bound `Foo<T>: !Unpin` is not satisfied
  --> $DIR/projection-unpin-checks.rs:15:9
   |
LL |     let Foo(_x) = foo_mut;
   |         ^^^^^^^ the trait bound `Foo<T>: !Unpin` is not satisfied

error[E0277]: the trait bound `Foo<T>: !Unpin` is not satisfied
  --> $DIR/projection-unpin-checks.rs:16:9
   |
LL |     let Foo(_x) = foo_const;
   |         ^^^^^^^ the trait bound `Foo<T>: !Unpin` is not satisfied

error[E0277]: the trait bound `Foo<T>: !Unpin` is not satisfied
  --> $DIR/projection-unpin-checks.rs:17:9
   |
LL |     let Foo(_x) = (|| foo_mut)();
   |         ^^^^^^^ the trait bound `Foo<T>: !Unpin` is not satisfied

error[E0277]: the trait bound `Foo<T>: !Unpin` is not satisfied
  --> $DIR/projection-unpin-checks.rs:18:9
   |
LL |     let Foo(_x) = (|| foo_const)();
   |         ^^^^^^^ the trait bound `Foo<T>: !Unpin` is not satisfied

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:19:9
   |
LL |     let &mut _foo_mut = foo_mut;
   |         ^^^^^^^^^^^^^   ------- this expression has type `Pin<&mut Foo<T>>`
   |         |
   |         expected `Pin<&mut Foo<T>>`, found `&mut _`
   |
   = note:         expected struct `Pin<&mut Foo<T>>`
           found mutable reference `&mut _`
help: you might have meant to use field `pointer` whose type is `&mut Foo<T>`
   |
LL |     let &mut _foo_mut = foo_mut.pointer;
   |                                ++++++++
help: to declare a mutable variable use
   |
LL -     let &mut _foo_mut = foo_mut;
LL +     let mut _foo_mut = foo_mut;
   |

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:20:9
   |
LL |     let &_foo_const = foo_const;
   |         ^^^^^^^^^^^   --------- this expression has type `Pin<&Foo<T>>`
   |         |
   |         expected `Pin<&Foo<T>>`, found `&_`
   |
   = note: expected struct `Pin<&Foo<T>>`
           found reference `&_`
help: you might have meant to use field `pointer` whose type is `&Foo<T>`
   |
LL |     let &_foo_const = foo_const.pointer;
   |                                ++++++++

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:31:9
   |
LL |     let &mut _foo_mut = foo_mut;
   |         ^^^^^^^^^^^^^   ------- this expression has type `Pin<&mut Foo<T>>`
   |         |
   |         expected `Pin<&mut Foo<T>>`, found `&mut _`
   |
   = note:         expected struct `Pin<&mut Foo<T>>`
           found mutable reference `&mut _`
help: you might have meant to use field `pointer` whose type is `&mut Foo<T>`
   |
LL |     let &mut _foo_mut = foo_mut.pointer;
   |                                ++++++++
help: to declare a mutable variable use
   |
LL -     let &mut _foo_mut = foo_mut;
LL +     let mut _foo_mut = foo_mut;
   |

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:32:9
   |
LL |     let &_foo_const = foo_const;
   |         ^^^^^^^^^^^   --------- this expression has type `Pin<&Foo<T>>`
   |         |
   |         expected `Pin<&Foo<T>>`, found `&_`
   |
   = note: expected struct `Pin<&Foo<T>>`
           found reference `&_`
help: you might have meant to use field `pointer` whose type is `&Foo<T>`
   |
LL |     let &_foo_const = foo_const.pointer;
   |                                ++++++++

error[E0277]: the trait bound `NotUnpinFoo<T>: !Unpin` is not satisfied
  --> $DIR/projection-unpin-checks.rs:39:9
   |
LL |     let NotUnpinFoo(_x, _) = foo_mut;
   |         ^^^^^^^^^^^^^^^^^^ the trait bound `NotUnpinFoo<T>: !Unpin` is not satisfied

error[E0277]: the trait bound `NotUnpinFoo<T>: !Unpin` is not satisfied
  --> $DIR/projection-unpin-checks.rs:40:9
   |
LL |     let NotUnpinFoo(_x, _) = foo_const;
   |         ^^^^^^^^^^^^^^^^^^ the trait bound `NotUnpinFoo<T>: !Unpin` is not satisfied

error[E0277]: the trait bound `NotUnpinFoo<T>: !Unpin` is not satisfied
  --> $DIR/projection-unpin-checks.rs:41:9
   |
LL |     let NotUnpinFoo(_x, _) = (|| foo_mut)();
   |         ^^^^^^^^^^^^^^^^^^ the trait bound `NotUnpinFoo<T>: !Unpin` is not satisfied

error[E0277]: the trait bound `NotUnpinFoo<T>: !Unpin` is not satisfied
  --> $DIR/projection-unpin-checks.rs:42:9
   |
LL |     let NotUnpinFoo(_x, _) = (|| foo_const)();
   |         ^^^^^^^^^^^^^^^^^^ the trait bound `NotUnpinFoo<T>: !Unpin` is not satisfied

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:43:9
   |
LL |     let &mut _foo_mut = foo_mut;
   |         ^^^^^^^^^^^^^   ------- this expression has type `Pin<&mut NotUnpinFoo<T>>`
   |         |
   |         expected `Pin<&mut NotUnpinFoo<T>>`, found `&mut _`
   |
   = note:         expected struct `Pin<&mut NotUnpinFoo<T>>`
           found mutable reference `&mut _`
help: you might have meant to use field `pointer` whose type is `&mut NotUnpinFoo<T>`
   |
LL |     let &mut _foo_mut = foo_mut.pointer;
   |                                ++++++++
help: to declare a mutable variable use
   |
LL -     let &mut _foo_mut = foo_mut;
LL +     let mut _foo_mut = foo_mut;
   |

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:44:9
   |
LL |     let &_foo_const = foo_const;
   |         ^^^^^^^^^^^   --------- this expression has type `Pin<&NotUnpinFoo<T>>`
   |         |
   |         expected `Pin<&NotUnpinFoo<T>>`, found `&_`
   |
   = note: expected struct `Pin<&NotUnpinFoo<T>>`
           found reference `&_`
help: you might have meant to use field `pointer` whose type is `&NotUnpinFoo<T>`
   |
LL |     let &_foo_const = foo_const.pointer;
   |                                ++++++++

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:58:9
   |
LL |     let &mut _foo_mut = foo_mut;
   |         ^^^^^^^^^^^^^   ------- this expression has type `Pin<&mut NotUnpinFoo<T>>`
   |         |
   |         expected `Pin<&mut NotUnpinFoo<T>>`, found `&mut _`
   |
   = note:         expected struct `Pin<&mut NotUnpinFoo<T>>`
           found mutable reference `&mut _`
help: you might have meant to use field `pointer` whose type is `&mut NotUnpinFoo<T>`
   |
LL |     let &mut _foo_mut = foo_mut.pointer;
   |                                ++++++++
help: to declare a mutable variable use
   |
LL -     let &mut _foo_mut = foo_mut;
LL +     let mut _foo_mut = foo_mut;
   |

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:59:9
   |
LL |     let &_foo_const = foo_const;
   |         ^^^^^^^^^^^   --------- this expression has type `Pin<&NotUnpinFoo<T>>`
   |         |
   |         expected `Pin<&NotUnpinFoo<T>>`, found `&_`
   |
   = note: expected struct `Pin<&NotUnpinFoo<T>>`
           found reference `&_`
help: you might have meant to use field `pointer` whose type is `&NotUnpinFoo<T>`
   |
LL |     let &_foo_const = foo_const.pointer;
   |                                ++++++++

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:70:9
   |
LL |     let &mut _foo_mut = foo_mut;
   |         ^^^^^^^^^^^^^   ------- this expression has type `Pin<&mut NegUnpinFoo<T>>`
   |         |
   |         expected `Pin<&mut NegUnpinFoo<T>>`, found `&mut _`
   |
   = note:         expected struct `Pin<&mut NegUnpinFoo<T>>`
           found mutable reference `&mut _`
help: you might have meant to use field `pointer` whose type is `&mut NegUnpinFoo<T>`
   |
LL |     let &mut _foo_mut = foo_mut.pointer;
   |                                ++++++++
help: to declare a mutable variable use
   |
LL -     let &mut _foo_mut = foo_mut;
LL +     let mut _foo_mut = foo_mut;
   |

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:71:9
   |
LL |     let &_foo_const = foo_const;
   |         ^^^^^^^^^^^   --------- this expression has type `Pin<&NegUnpinFoo<T>>`
   |         |
   |         expected `Pin<&NegUnpinFoo<T>>`, found `&_`
   |
   = note: expected struct `Pin<&NegUnpinFoo<T>>`
           found reference `&_`
help: you might have meant to use field `pointer` whose type is `&NegUnpinFoo<T>`
   |
LL |     let &_foo_const = foo_const.pointer;
   |                                ++++++++

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:85:9
   |
LL |     let &mut _foo_mut = foo_mut;
   |         ^^^^^^^^^^^^^   ------- this expression has type `Pin<&mut NegUnpinFoo<T>>`
   |         |
   |         expected `Pin<&mut NegUnpinFoo<T>>`, found `&mut _`
   |
   = note:         expected struct `Pin<&mut NegUnpinFoo<T>>`
           found mutable reference `&mut _`
help: you might have meant to use field `pointer` whose type is `&mut NegUnpinFoo<T>`
   |
LL |     let &mut _foo_mut = foo_mut.pointer;
   |                                ++++++++
help: to declare a mutable variable use
   |
LL -     let &mut _foo_mut = foo_mut;
LL +     let mut _foo_mut = foo_mut;
   |

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:86:9
   |
LL |     let &_foo_const = foo_const;
   |         ^^^^^^^^^^^   --------- this expression has type `Pin<&NegUnpinFoo<T>>`
   |         |
   |         expected `Pin<&NegUnpinFoo<T>>`, found `&_`
   |
   = note: expected struct `Pin<&NegUnpinFoo<T>>`
           found reference `&_`
help: you might have meant to use field `pointer` whose type is `&NegUnpinFoo<T>`
   |
LL |     let &_foo_const = foo_const.pointer;
   |                                ++++++++

error[E0277]: the trait bound `&'a mut NegUnpinFoo<T>: !Unpin` is not satisfied in `(&'a mut NegUnpinFoo<T>,)`
  --> $DIR/projection-unpin-checks.rs:93:5
   |
LL |     (&mut x,): &'a pin mut (&'a mut NegUnpinFoo<T>,),
   |     ^^^^^^^^^ within `(&'a mut NegUnpinFoo<T>,)`, the trait bound `&'a mut NegUnpinFoo<T>: !Unpin` is not satisfied
   |
   = note: required because it appears within the type `(&'a mut NegUnpinFoo<T>,)`

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:100:6
   |
LL |     (&mut x,): &'a pin mut &'a mut (NegUnpinFoo<T>,),
   |      ^^^^^^    ------------------------------------- expected due to this
   |      |
   |      expected `NegUnpinFoo<T>`, found `&mut _`
   |
   = note:         expected struct `NegUnpinFoo<T>`
           found mutable reference `&mut _`
note: to declare a mutable binding use: `mut x`
  --> $DIR/projection-unpin-checks.rs:100:6
   |
LL |     (&mut x,): &'a pin mut &'a mut (NegUnpinFoo<T>,),
   |      ^^^^^^
help: consider removing `&mut` from the pattern
   |
LL -     (&mut x,): &'a pin mut &'a mut (NegUnpinFoo<T>,),
LL +     (x,): &'a pin mut &'a mut (NegUnpinFoo<T>,),
   |

error[E0277]: the trait bound `&'a mut (NegUnpinFoo<T>,): !Unpin` is not satisfied
  --> $DIR/projection-unpin-checks.rs:100:5
   |
LL |     (&mut x,): &'a pin mut &'a mut (NegUnpinFoo<T>,),
   |     ^^^^^^^^^ the trait bound `&'a mut (NegUnpinFoo<T>,): !Unpin` is not satisfied

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:108:5
   |
LL |     &mut (x,): &'a pin mut (&'a mut NegUnpinFoo<T>,),
   |     ^^^^^^^^^  ------------------------------------- expected due to this
   |     |
   |     expected `Pin<&mut (&mut NegUnpinFoo<T>,)>`, found `&mut _`
   |
   = note:         expected struct `Pin<&'a mut (&'a mut NegUnpinFoo<T>,)>`
           found mutable reference `&mut _`
help: you might have meant to use field `pointer` whose type is `&'a mut (&'a mut NegUnpinFoo<T>,)`
   |
LL |     &mut (x,): &'a pin mut (&'a mut NegUnpinFoo<T>,).pointer,
   |                                                     ++++++++

error[E0308]: mismatched types
  --> $DIR/projection-unpin-checks.rs:114:5
   |
LL |     &mut (x,): &'a pin mut &'a mut (NegUnpinFoo<T>,),
   |     ^^^^^^^^^  ------------------------------------- expected due to this
   |     |
   |     expected `Pin<&mut &mut (NegUnpinFoo<T>,)>`, found `&mut _`
   |
   = note:         expected struct `Pin<&'a mut &'a mut (NegUnpinFoo<T>,)>`
           found mutable reference `&mut _`
help: you might have meant to use field `pointer` whose type is `&'a mut &'a mut (NegUnpinFoo<T>,)`
   |
LL |     &mut (x,): &'a pin mut &'a mut (NegUnpinFoo<T>,).pointer,
   |                                                     ++++++++

error[E0277]: the trait bound `&'a mut (NegUnpinFoo<T>,): !Unpin` is not satisfied
  --> $DIR/projection-unpin-checks.rs:126:5
   |
LL |     (x,): &'a pin mut &'a mut (NegUnpinFoo<T>,),
   |     ^^^^ the trait bound `&'a mut (NegUnpinFoo<T>,): !Unpin` is not satisfied

error: aborting due to 26 previous errors

Some errors have detailed explanations: E0277, E0308.
For more information about an error, try `rustc --explain E0277`.
